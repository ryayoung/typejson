name: Build & publish wheels

on:
  push:
    tags: ["v*"]
  workflow_dispatch:

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-14, windows-latest]   # macOS-14 = Apple Silicon runner
    steps:
      - uses: actions/checkout@v4

      # 1. Install a stable Rust toolchain
      - uses: dtolnay/rust-toolchain@stable

      - uses: pypa/cibuildwheel@v2.18
        env:
          CIBW_BUILD: "cp313-*"
          # Produce both x86_64 and aarch64 wheels on Linux; universal2 on macOS
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "universal2"    # ^macos-14 gives arm64, macOS-13 gives x86_64
          CIBW_SKIP: "*-musllinux_i686 *-pypy*"  # skip musl & PyPy if you like

      # 3. Upload the wheels as a build artefact so the publish job can grab them
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: wheelhouse/*

  sdist:
    name: Source sdist
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: pip install maturin~=1.8
      - run: maturin sdist -o dist
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish:
    needs: [build, sdist]
    runs-on: ubuntu-22.04
    permissions:
      id-token: write          # → PyPI’s “trusted publisher” flow
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: final_dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: final_dist
          verbose: true
